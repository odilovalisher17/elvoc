{"version":3,"sources":["Components/Voc.js","store/configureStore.js","Components/Login.js","helpers/auth.js","Components/GameOver.js","Components/AppNavbar.js","Components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["compose","firestoreConnect","collection","connect","state","props","client","firestore","ordered","username","firebase","profile","email","users","history","useState","Math","floor","random","qnum","setQnum","ans","setAns","scoree","setScoree","life","setLife","console","log","index","findIndex","u","id","_","authUid","style","height","className","Card","Header","slice","length","Array","map","p","Body","Form","onSubmit","e","preventDefault","toLocaleLowerCase","answer","score","updateClient","tryscore","update","doc","push","Group","Label","question","Control","type","placeholder","value","onChange","target","Button","Spinner","animation","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","rootReducer","combineReducers","firebaseReducer","firestoreReducer","store","createStore","devToolsEnhancer","rrfProps","config","userProfile","useFirestoreForProfile","dispatch","createFirestoreInstance","emaill","setEmaill","setEmail","password","createUser","catch","err","alert","then","controlId","variant","locationHelper","locationHelperBuilder","UserIsAuthenticated","createHistory","connectedRouterRedirect","wrapperDisplayName","AuthenticatingComponent","allowRedirectBack","redirectPath","ownProps","getRedirectQueryParam","authenticatingSelector","auth","isInitializing","isLoaded","authenticatedSelector","isEmpty","UserIsNotAuthenticated","sortWithScore","sort","a","b","parseInt","onClick","Table","striped","bordered","hover","AppNavbar","Footer","href","App","exact","path","component","Voc","GameOver","Login","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOA6GeA,oBACXC,2BAAiB,CAAC,CAACC,WAAa,YAChCD,2BAAiB,CAAC,CAACC,WAAa,WAChCC,mBAAQ,SAACC,EAAOC,GAAR,MAAiB,CACrBC,OAASF,EAAMG,UAAUC,QAAQF,OACjCG,SAAWL,EAAMM,SAASC,QAAQC,MAClCC,MAAQT,EAAMG,UAAUC,QAAQK,UANzBb,EAvGH,SAAAK,GAER,IAAOC,EAAyDD,EAAzDC,OAAQG,EAAiDJ,EAAjDI,SAAUC,EAAuCL,EAAvCK,SAAUI,EAA6BT,EAA7BS,QAASP,EAAoBF,EAApBE,UAAWM,EAASR,EAATQ,MACvD,EAAwBE,mBAASC,KAAKC,MAAoB,GAAdD,KAAKE,WAAjD,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBL,mBAAS,IAA/B,mBAAOM,EAAP,KAAYC,EAAZ,KACA,EAA4BP,mBAAS,GAArC,mBAAOQ,EAAP,KAAeC,EAAf,KACA,EAAwBT,mBAAS,GAAjC,mBAAOU,EAAP,KAAaC,EAAb,KAUA,GAFJC,QAAQC,IAAIT,GAELb,GAAQG,EAAS,CAChB,IAAIoB,EAAQhB,EAAMiB,WAAU,SAAAC,GAAC,OAAEA,EAAEC,KAAOtB,EAASuB,EAAEC,WAsCnD,OACI,mCAEI,qBAAKC,MAAO,CAACC,OAAS,QAASC,UAAU,+DAAzC,SACA,eAACC,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,OAAN,WACA,6BAAK9B,EAAS+B,MAAM,EAAG/B,EAASgC,OAAO,MACvC,uCACK,YAAIC,MAAMjB,IAAOkB,KAAI,SAAAC,GAClB,OAAO,mBAAGP,UAAU,2BAG5B,6CAAgBd,QAGhB,cAACe,EAAA,EAAKO,KAAN,UACI,cAACC,EAAA,EAAD,CAAMC,SApDR,SAAAC,GAQV,GAPAA,EAAEC,iBAEC5B,EAAI6B,sBAAwB5C,EAAOa,GAAMgC,SACxC/B,EAAQJ,KAAKC,MAAMD,KAAKE,SAASZ,EAAOmC,SACxCjB,EAAUD,EAAO,GACjBD,EAAO,KAEA,KAARD,GAAcA,EAAI6B,sBAAwB5C,EAAOa,GAAMgC,SAC1C,IAAT1B,IACCL,EAAQJ,KAAKC,MAAMD,KAAKE,SAASZ,EAAOmC,SACxCf,EAAQD,EAAK,GACbH,EAAO,KAEC,IAATG,GAEC,GAAGZ,EAAMgB,GAAOuB,MAAQ7B,EAAO,CAC3B,IAAM8B,EAAe,CACjBzC,MAAQH,EACR2C,MAAQ7B,EACR+B,SAAW/B,GAEnBhB,EAAUgD,OAAO,CAACrD,WAAa,QAASsD,IAAM3C,EAAMgB,GAAOG,IAAKqB,GAChEvC,EAAQ2C,KAAK,iBACR,CACD,IAAMJ,EAAe,CACjBzC,MAAQH,EACR6C,SAAW/B,GAEnBhB,EAAUgD,OAAO,CAACrD,WAAa,QAASsD,IAAM3C,EAAMgB,GAAOG,IAAKqB,GAChEvC,EAAQ2C,KAAK,eAsBT,SACI,eAACX,EAAA,EAAKY,MAAN,WACI,cAACZ,EAAA,EAAKa,MAAN,iCACA,6BAAKrD,EAAOa,GAAMyC,WAClB,cAACd,EAAA,EAAKe,QAAN,CACAC,KAAK,OACLC,YAAY,oBACZC,MAAO3C,EACP4C,SAAU,SAAAjB,GAAC,OAAE1B,EAAO0B,EAAEkB,OAAOF,UAC7B,cAACG,EAAA,EAAD,CAAQL,KAAK,SAASzB,UAAU,OAAhC,kCAexB,OACI,qBAAKF,MAAO,CAACC,OAAS,QAASC,UAAU,+DAAzC,SACA,cAAC+B,EAAA,EAAD,CAASC,UAAU,gB,yEC1E7B3D,IAAS4D,cAjBY,CACnBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBAYjBnE,IAASH,YAGT,IAAMuE,EAAcC,0BAAgB,CAClCrE,SAAUsE,kBACVzE,UAAW0E,qBAKPC,EAAQC,sBAAYL,EADL,GACgC9E,kBAAQoF,+BAG9CF,IAGFG,EAAW,CACtB3E,aACA4E,OA1BgB,CAChBC,YAAa,QACbC,wBAAwB,GAyBxBC,SAAUP,EAAMO,SAChBC,mDCIW1F,oBACXC,2BAAiB,CAAC,CAACC,WAAa,WAChCC,mBAAQ,SAACC,EAAOC,GAAR,MAAiB,CACrBQ,MAAQT,EAAMG,UAAUC,QAAQK,UAHzBb,EAjDD,SAAAK,GAEV,IAAOK,EAAqBL,EAArBK,SAAUI,EAAWT,EAAXS,QAEjB,EAA4BC,mBAAS,IAArC,mBAAO4E,EAAP,KAAeC,EAAf,KACA,EAA0B7E,mBAAS,IAAnC,mBAAOH,EAAP,KAAciF,EAAd,KACA,EAAgC9E,mBAAS,UAAzC,mBAAO+E,EAAP,UAoBI,OACI,qBAAK3D,MAAO,CAACC,OAAS,SAAUC,UAAU,+DAA1C,SAEA,eAACS,EAAA,EAAD,CAAMC,SAXI,SAAAC,GACVA,EAAEC,iBAGFvC,EAASqF,WAAW,CAACnF,QAAOkF,YAAU,CAAClF,QAAOwC,MAAQ,EAAGE,SAAW,IAAI0C,OAAM,SAAAC,GAAG,OAAEC,MAAMD,MAAME,MAAK,kBAAIrF,EAAQ2C,KAAK,SAOrH,UACwB,cAACX,EAAA,EAAKY,MAAN,CAAY0C,UAAU,iBAAtB,SAEI,cAACtD,EAAA,EAAKe,QAAN,CAAcC,KAAK,OAAOC,YAAY,kBACtCC,MAAO2B,EACP1B,SAAU,SAAAjB,GACN4C,EAAU5C,EAAEkB,OAAOF,OACnB6B,EAAS,GAAD,OAAI7C,EAAEkB,OAAOF,MAAb,oBAGhB,cAACG,EAAA,EAAD,CAAQkC,QAAQ,UAAUvC,KAAK,SAA/B,4B,6CCxC9BwC,EAAiBC,IAAsB,IAGhCC,GAFUC,MAEYC,kCAAwB,CACzDC,mBAAoB,sBACpBC,wBAAyBxC,IACzByC,mBAAmB,EACnBC,aAAc,SAAC1G,EAAO2G,GAAR,OACZT,EAAeU,sBAAsBD,IAAa,UACpDE,uBAAwB,oBAAGvG,SAAYwG,EAAf,EAAeA,KAAeC,GAA9B,EAAqBxG,QAArB,EAA8BwG,gBAA9B,OACrBD,EAAKE,WAA+B,IAAnBD,GACpBE,sBAAuB,gBAAeH,EAAf,EAAGxG,SAAYwG,KAAf,OACrBA,EAAKE,WAAaF,EAAKI,YAGdC,EAAyBb,kCAAwB,CAC5DC,mBAAoB,yBACpBC,wBAAyBxC,IACzByC,mBAAmB,EACnBC,aAAc,SAAC1G,EAAO2G,GAAR,OACZT,EAAeU,sBAAsBD,IAAa,KACpDE,uBAAwB,oBAAGvG,SAAYwG,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,eAArB,OACrBD,EAAKE,WAA+B,IAAnBD,GACpBE,sBAAuB,gBAAeH,EAAf,EAAGxG,SAAYwG,KAAf,OACrBA,EAAKE,UAAYF,EAAKI,W,SCiCXtH,oBACXC,2BAAiB,CAAC,CAACC,WAAa,WAChCC,mBAAQ,SAACC,EAAOC,GAAR,MAAiB,CACrBI,SAAWL,EAAMM,SAASC,QAAQC,MAClCC,MAAQT,EAAMG,UAAUC,QAAQK,UAJzBb,EAxDE,SAAAK,GACb,IAAOI,EAAsCJ,EAAtCI,SAAUC,EAA4BL,EAA5BK,SAAUG,EAAkBR,EAAlBQ,MAAOC,EAAWT,EAAXS,QAE5B0G,EAAgB,WAClB,OAAO,YAAI3G,GAAO4G,MAAK,SAACC,EAAGC,GACvB,OAAOC,SAASD,EAAEvE,OAASwE,SAASF,EAAEtE,WAU9C,GAAGvC,GAAOJ,EAAS,CACf,IAAIoB,EAAQ2F,IAAgB1F,WAAU,SAAAC,GAAC,OAAEA,EAAEC,KAAOtB,EAASuB,EAAEC,WAC7D,OACI,eAACI,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,OAAN,WACA,gCACA,6BAAK9B,EAAS+B,MAAM,EAAG/B,EAASgC,OAAO,MADvC,YAGA,6CAAgB+E,IAAgB3F,GAAOyB,eAEvC,cAACa,EAAA,EAAD,CAAQ0D,QAhBJ,SAAA7E,GACZA,EAAEC,iBAEFnC,EAAQ2C,KAAK,MAaL,sBAEA,cAACnB,EAAA,EAAKO,KAAN,UACI,eAACiF,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACI,gCACI,+BACI,wCACA,sCACA,6CAIR,gCAEKT,IAAgB7E,KAAI,SAACZ,EAAGF,GAAJ,OACjB,+BACI,6BAAKA,EAAQ,IACb,6BAAKE,EAAEnB,MAAM4B,MAAM,EAAGT,EAAEnB,MAAM6B,OAAO,MACrC,6BAAKV,EAAEqB,wBAUvC,OAAO,gCCjDI8E,EARG,WACd,OACI,qBAAK7F,UAAU,cAAf,SACI,+ECKG8F,EARA,WACX,OACI,sBAAK9F,UAAU,cAAf,wBACe,mBAAG+F,KAAK,sBAAR,wBCyBRC,EAlBH,WACV,OACE,cAAC,WAAD,CAAUnD,MAAOA,EAAjB,SACE,eAAC,6BAAD,2BAAgCG,GAAhC,cACA,cAAC,EAAD,IACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiD,OAAK,EAACC,KAAK,IAAIC,UAAWhC,EAAoBiC,KACrD,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,YAAYC,UAAWhC,EAAoBkC,KAC7D,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,SAASC,UAAWjB,EAAuBoB,UAGjE,cAAC,EAAD,WCZSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3C,MAAK,YAAkD,IAA/C4C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,cCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ee3f3e34.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport {Card, Button, Spinner, Form} from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n\r\nconst Voc = props => {\r\n\r\n    const {client, username, firebase, history, firestore, users} = props\r\n    const [qnum, setQnum] = useState(Math.floor(Math.random()*10))\r\n    const [ans, setAns] = useState('')\r\n    const [scoree, setScoree] = useState(0)\r\n    const [life, setLife] = useState(3)\r\n    \r\n\r\n    // const onLogout = e => {\r\n    //     e.preventDefault()\r\n\r\n    //     firebase.logout().then(()=>history.push('/'))\r\n    // }\r\nconsole.log(qnum)\r\n\r\n    if(client&&username){\r\n        let index = users.findIndex(u=>u.id === firebase._.authUid)\r\n\r\n        const onAns = e => {\r\n            e.preventDefault()\r\n    \r\n            if(ans.toLocaleLowerCase() === client[qnum].answer){\r\n                setQnum(Math.floor(Math.random()*client.length))\r\n                setScoree(scoree+1)\r\n                setAns('')\r\n            }\r\n            if(ans !== '' && ans.toLocaleLowerCase() !== client[qnum].answer){\r\n                if(life !== 1){\r\n                    setQnum(Math.floor(Math.random()*client.length))\r\n                    setLife(life-1)\r\n                    setAns('')\r\n                }\r\n                if(life === 1){\r\n                    \r\n                    if(users[index].score < scoree){\r\n                        const updateClient = {\r\n                            email : username,\r\n                            score : scoree,\r\n                            tryscore : scoree\r\n                        }\r\n                    firestore.update({collection : 'users', doc : users[index].id}, updateClient)\r\n                    history.push('/gameover')\r\n                    }else{\r\n                        const updateClient = {\r\n                            email : username,\r\n                            tryscore : scoree\r\n                        }\r\n                    firestore.update({collection : 'users', doc : users[index].id}, updateClient)\r\n                    history.push('/gameover')\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return (\r\n            <>\r\n                \r\n                <div style={{height : \"80vh\"}} className='d-flex flex-column justify-content-center align-items-center'>\r\n                <Card>\r\n                    <Card.Header>\r\n                    <h1>{username.slice(0, username.length-10)}</h1>\r\n                    <p>Life : \r\n                        {[...Array(life)].map(p => {\r\n                            return <i className=\"fa fa-heart mx-1\"></i>\r\n                        })}\r\n                    </p>\r\n                    <small>Score : {scoree}</small>\r\n                    </Card.Header>\r\n\r\n                    <Card.Body>\r\n                        <Form onSubmit={onAns}>\r\n                            <Form.Group>\r\n                                <Form.Label>Text to translate:</Form.Label>\r\n                                <h4>{client[qnum].question}</h4>\r\n                                <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter your answer\"\r\n                                value={ans}\r\n                                onChange={e=>setAns(e.target.value)} />\r\n                                <Button type=\"submit\" className=\"my-3\">Submit</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n\r\n                {/* <Button onClick={onLogout}>\r\n                    Log Out\r\n                </Button> */}\r\n                </div>\r\n            \r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <div style={{height : \"80vh\"}} className='d-flex flex-column justify-content-center align-items-center'>\r\n            <Spinner animation=\"border\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect([{collection : 'client'}]),\r\n    firestoreConnect([{collection : 'users'}]),\r\n    connect((state, props)=>({\r\n        client : state.firestore.ordered.client,\r\n        username : state.firebase.profile.email,\r\n        users : state.firestore.ordered.users\r\n    }))\r\n)(Voc)\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/database'\r\nimport 'firebase/storage'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport { createStore, combineReducers, compose } from 'redux'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\nimport {createFirestoreInstance, firestoreReducer} from 'redux-firestore'\r\nimport {devToolsEnhancer} from 'redux-devtools-extension'\r\n\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCca5eCAO5Oro0QhPTthqLmwg7j5X5KRFs\",\r\n    authDomain: \"vocabulary-992e6.firebaseapp.com\",\r\n    projectId: \"vocabulary-992e6\",\r\n    storageBucket: \"vocabulary-992e6.appspot.com\",\r\n    messagingSenderId: \"1076715635955\",\r\n    appId: \"1:1076715635955:web:895026e9dccb925a46a386\",\r\n    measurementId: \"G-MBW9NVFC77\"\r\n  };\r\n\r\n  \r\n  const rrfConfig = {\r\n    userProfile: 'users',\r\n    useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\r\n  }\r\n\r\n\r\n  firebase.initializeApp(firebaseConfig)\r\n\r\n  firebase.firestore()\r\n\r\n\r\n  const rootReducer = combineReducers({\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer \r\n  })\r\n\r\n\r\n  const initialState = {}\r\n  const store = createStore(rootReducer, initialState, compose(devToolsEnhancer()))\r\n\r\n\r\n  export default store;\r\n\r\n\r\n  export const rrfProps = {\r\n    firebase,\r\n    config: rrfConfig,\r\n    dispatch: store.dispatch,\r\n    createFirestoreInstance // <- needed if using firestore\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n   \r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n\r\nconst Login = props => {\r\n\r\n    const {firebase, history} = props;\r\n\r\n    const [emaill, setEmaill] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('123456');\r\n\r\n    // const onLog = e => {\r\n    //     e.preventDefault()\r\n        \r\n        \r\n    //     firebase.login({\r\n    //         email,\r\n    //         password\r\n    //     }).catch(err=>alert('invalid email')).then(()=>history.push('/'))\r\n    // }\r\n    \r\n        const onReg = e => {\r\n            e.preventDefault()\r\n            \r\n            \r\n            firebase.createUser({email, password},{email, score : 0, tryscore : 0}).catch(err=>alert(err)).then(()=>history.push('/'))\r\n            \r\n        }\r\n        \r\n        return (\r\n            <div style={{height : \"100vh\"}} className='d-flex flex-column justify-content-center align-items-center'>\r\n            \r\n            <Form onSubmit={onReg}>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        \r\n                                        <Form.Control type=\"text\" placeholder=\"Enter your name\"\r\n                                        value={emaill}\r\n                                        onChange={e=>{\r\n                                            setEmaill(e.target.value)\r\n                                            setEmail(`${e.target.value}@gmail.com`)}} />\r\n                                    </Form.Group>\r\n    \r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Form>\r\n                \r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect([{collection : 'users'}]),\r\n    connect((state, props)=>({\r\n        users : state.firestore.ordered.users\r\n    }))\r\n)(Login)\r\n","import locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper';\r\nimport { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect'\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport {Spinner} from 'react-bootstrap'; // change it to your custom component\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\nconst browserHistory = createHistory()\r\n\r\nexport const UserIsAuthenticated = connectedRouterRedirect({\r\n  wrapperDisplayName: 'UserIsAuthenticated',\r\n  AuthenticatingComponent: Spinner,\r\n  allowRedirectBack: true,\r\n  redirectPath: (state, ownProps) =>\r\n    locationHelper.getRedirectQueryParam(ownProps) || '/login',\r\n  authenticatingSelector: ({ firebase: { auth, profile, isInitializing } }) =>\r\n    !auth.isLoaded || isInitializing === true,\r\n  authenticatedSelector: ({ firebase: { auth } }) =>\r\n    auth.isLoaded && !auth.isEmpty,\r\n});\r\n\r\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\r\n  wrapperDisplayName: 'UserIsNotAuthenticated',\r\n  AuthenticatingComponent: Spinner,\r\n  allowRedirectBack: false,\r\n  redirectPath: (state, ownProps) =>\r\n    locationHelper.getRedirectQueryParam(ownProps) || '/',\r\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\r\n    !auth.isLoaded || isInitializing === true,\r\n  authenticatedSelector: ({ firebase: { auth } }) =>\r\n    auth.isLoaded && auth.isEmpty\r\n})\r\n\r\n","import React from 'react'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {connect} from 'react-redux'\r\nimport { Button, Card, Table } from 'react-bootstrap'\r\n\r\nconst GameOver = props => {\r\n    const {username, firebase, users, history} = props\r\n\r\n    const sortWithScore = () => {\r\n        return [...users].sort((a, b) => {\r\n            return parseInt(b.score) - parseInt(a.score)\r\n        });\r\n    }\r\n    \r\n    const Restart = e => {\r\n        e.preventDefault()\r\n\r\n        history.push('/')\r\n    }\r\n\r\n    if(users&&username){\r\n        let index = sortWithScore().findIndex(u=>u.id === firebase._.authUid)\r\n        return (\r\n            <Card>\r\n                <Card.Header>\r\n                <div>\r\n                <h1>{username.slice(0, username.length-10)}</h1>\r\n                Game Over\r\n                <h5>You scored {sortWithScore()[index].tryscore}</h5>\r\n                </div>\r\n                <Button onClick={Restart}>Again</Button>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>№</th>\r\n                                <th>Name</th>\r\n                                <th>Record</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            \r\n                            {sortWithScore().map((u, index)=>(\r\n                                <tr>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{u.email.slice(0, u.email.length-10)}</td>\r\n                                    <td>{u.score}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n\r\n    return <></>;\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect([{collection : 'users'}]),\r\n    connect((state, props)=>({\r\n        username : state.firebase.profile.email,\r\n        users : state.firestore.ordered.users\r\n    }))\r\n)(GameOver)\r\n","import React from 'react'\r\n\r\nconst AppNavbar = () => {\r\n    return (\r\n        <div className='text-center'>\r\n            <h5>British Academy Elementry Group Vocabulary</h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppNavbar\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"text-center\">\r\n            Created by <a href=\"https://t.me/li2690\">Odilov</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\nimport Voc from './Components/Voc'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport store,{rrfProps} from './store/configureStore'\nimport {ReactReduxFirebaseProvider} from 'react-redux-firebase'\nimport {Provider} from 'react-redux'\nimport Login from './Components/Login'\nimport {UserIsAuthenticated, UserIsNotAuthenticated} from './helpers/auth'\nimport GameOver from './Components/GameOver'\nimport AppNavbar from './Components/AppNavbar'\nimport Footer from './Components/Footer'\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n      <AppNavbar />\n      <Router>\n        <Switch>\n          <Route exact path='/' component={UserIsAuthenticated(Voc)} />\n          <Route exact path='/gameover' component={UserIsAuthenticated(GameOver)} />\n          <Route exact path='/login' component={UserIsNotAuthenticated(Login)} />\n        </Switch>\n      </Router>\n      <Footer />\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'font-awesome/css/font-awesome.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}